<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Free Hacking</title>
    <link>http://zhash.github.io/post/</link>
    <description>Recent content in Posts on Free Hacking</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2016, Merty; all rights reserved.</copyright>
    <lastBuildDate>Fri, 25 Mar 2016 15:05:04 +0800</lastBuildDate>
    <atom:link href="http://zhash.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>用VBA编写拥抱变化的代码(二)</title>
      <link>http://zhash.github.io/post/embrace-change-with-vba-02/</link>
      <pubDate>Fri, 25 Mar 2016 15:05:04 +0800</pubDate>
      
      <guid>http://zhash.github.io/post/embrace-change-with-vba-02/</guid>
      <description>&lt;p&gt;第一篇写了如何封装包裹传入的简单参数,小喽啰总是好解决的.
现在如果传入的是一个数组,我们应该如何处理？大部队来了……&lt;/p&gt;

&lt;p&gt;我们照样弄个长方体的类Cuboid&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Private ar

Function init(crr)
    ar = crr
End Function

Property Get arr()
    arr = ar
End Property

Function perimeter()   &#39;计算一个长与两个宽的和
    brr = arr
    For i = 1 To UBound(brr, 1)
        perimeter = brr(1, 1) + brr(i, 2) * 2
    Next
End Function
&#39;……其他大量索引该数组的方法
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;传入的参数是一系列长、宽的二维数组：arr = [{10,3;10,4;10,5}]&lt;/p&gt;

&lt;p&gt;按第一篇的思路,我们把传入的数组用一个方法包裹封装起来了.
但arr这个方法仅仅是返回了这个数组,而使用它的方法,必须
了解数据的哪一部分位于这个数组的哪一个索引位置上.&lt;/p&gt;

&lt;p&gt;方法perimeter不仅知道如何计算*类周长*（周长是2个长2个宽）,
它还清楚的知道在数组的什么地方可以找到长与宽的数据.&lt;/p&gt;

&lt;p&gt;遍历数组时,长在第一个位置,宽在第二个位置,它依赖于数组的结构.
如果这个数组的结构变了,比如,长与宽的位置颠倒了,那么这个方法
就必须更改了,而其他引用该数组的方法也要进更改,这些方法是脆弱的.&lt;/p&gt;

&lt;p&gt;它们明修栈道,暗渡陈仓,表面上说投降我们了,可背后捅了我们一刀,暗箭难防啊.&lt;/p&gt;

&lt;p&gt;它们不符合DRY原则,长跟宽在哪个索引位置的信息不应该被多次复制,它们只应
该存在于一个地方,我们应该用一个方法把它们包裹起来.&lt;/p&gt;

&lt;p&gt;修改后的类如下所示：
    Private Type Taller
        length As Long
        wide As Long
    End Type&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Private tall() As Taller
Private count

Function init(arr)
    tallify arr
End Function

Function perimeter()
    For i = 1 To count
        perimeter = tall(i).length + tall(i).wide * 2
    Next
End Function

Private Function tallify(arr) As Variant  &#39;包裹传进来的数组参数
    For i = 1 To UBound(arr, 1)
        ReDim Preserve tall(1 To i)
        tall(i).length = arr(i, 1)
        tall(i).wide = arr(i, 2)
    Next
    count = i - 1
End Function
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上面的这个perimeter方法对那个传入数组的内部结构一无所知,
它所知道的都是我们可以控制.tallify这个方法只包含少量的几
句代码,只有它能理解传入的数组参数,大部队敌人来了又怎样,我
们派一个小分队就解决了！&lt;/p&gt;

&lt;p&gt;这种样式的代码让你不会受到外部所属数据结构变化的影响,并且
还能提高代码的可读性（你说你不懂英文？咳咳,学学就懂了）,
同时它也更符合DRY原则.&lt;/p&gt;

&lt;p&gt;当然如果你能够控制输入,那么以上完全都不是必要的；如果你不
能确定,请将这种不确定的影响降到最低.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>用VBA编写拥抱变化的代码(一)</title>
      <link>http://zhash.github.io/post/embrace-change-with-vba-01/</link>
      <pubDate>Fri, 25 Mar 2016 14:11:11 +0800</pubDate>
      
      <guid>http://zhash.github.io/post/embrace-change-with-vba-01/</guid>
      <description>

&lt;h1 id=&#34;embrace-change:e51d929b0160f65eb1da435a8f9e8108&#34;&gt;Embrace Change&lt;/h1&gt;

&lt;p&gt;毫无疑问,这样的标题出来,应该是基于类的,在个人认为基于模块的VBA代码,
就好象一个毫无基础的人,直接打开EXCEL在电子表格里乱图乱画一样(说这样
的话会不会被人拍砖？一家之言,不必当真哈),当然每个写VBA代码的人都是
这样过来的,我只在指出一条另外的路径供大家参考.同时唠叨一句,VBA的功
能还是很强大的,当然其性能有天然的缺点,但我们又不是用它来发射火箭,够用了.&lt;/p&gt;

&lt;p&gt;先看一个小例子:长方体的类Cuboid&lt;/p&gt;

&lt;p&gt;属性:底面积 高
    private are
    private hig&lt;/p&gt;

&lt;p&gt;方法:求体积与初始化方法
    Function volume()
        volume = are * hig
    End Function&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Function init(area, high)
    are = area
    hig = high
End Function
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这是一个小巧的类,但有一些隐患在其中,我们是认为体积等于底面积*高,
底面积是基于我们初始化传入的参数,然后这参数在我们的类中被肆意的到处引用,
当然这个类只是举例,所以简化了这面积参数只用来求体积.&lt;/p&gt;

&lt;p&gt;如果这个类中有一个长的属性,
从而有一个用面积参数来求宽的方法,基于此还有一个求周长的方法,甚至被引用到其他的类中作为接口&amp;hellip;&lt;/p&gt;

&lt;p&gt;可以想象如果我们传入的参数不是一个面积的概念,会怎样？
所有基于它的方法都会出错,需要重新修改,因此它需要一个&lt;em&gt;约束&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;要依赖行为,不依赖数据&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;每一个细小的行为都只能存在于一个地方,“避免重复”(DRY),OO中的这一说法是对这一思想的简捷描述.
类包含数据与行为,数据可以是任何内容(包括简单的字符串或数值或者复杂的数组),
访问类的数据有两种方法:直接引用或者将其包裹在访问器方法里.&lt;/p&gt;

&lt;p&gt;我们应该总是将其包裹在访问器方法里,而不是直接引用这些变量,具体如下:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Private are
Private hig

Property Get area()
    area = are
End Property

Property Get high()
    high = hig
End Property

Function volume()
    volume = area * high   &#39;这里用了访问器的方法,而不是直接引用类数据变量
End Function

...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;现在访问器area方法便是这段代码里唯一可以理解are含义的地方,
实现此方法之后,are则由被四处引用的数据变成了只被定义了一次的行为,
如果传入的面积参数需要进行加工时,只要在访问器中加工一次就解决了.&lt;/p&gt;

&lt;p&gt;这种处理方法当然也会有其他的一些新问题,但不管怎样,你都应该将数据隐藏起来,
这种做法能保护代码避免它们受到意想不到的变化的影响,外部数据很常情况下不是
我们能控制的.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>设计模式在Excel VBA 类中的基础应用</title>
      <link>http://zhash.github.io/post/vba-design-pattern/</link>
      <pubDate>Thu, 24 Mar 2016 15:43:28 +0800</pubDate>
      
      <guid>http://zhash.github.io/post/vba-design-pattern/</guid>
      <description>

&lt;h1 id=&#34;design-pattern-vba:3482b2326563ae3120c25165b1c2f20a&#34;&gt;Design Pattern VBA&lt;/h1&gt;

&lt;p&gt;跟很多玩VBA朋友一样,对于VBA的类一直摸不着头脑,觉得它的应用貌似不如想象中的强大,
直到阅读了《设计模式》的相关书籍后,才有一点心得,分享如下,当然设计模式的思想概念
什么的不会再本文中展开叙述的. 同时关于VBA类的基础知识,这边也不赘述了,相关资料也
有许多. 看书的直接后果导致个人目前认为:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;技术到最后,褪去华丽的技巧,剩下能闪烁的还是思想.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;scene:3482b2326563ae3120c25165b1c2f20a&#34;&gt;Scene&lt;/h2&gt;

&lt;p&gt;个人在实际工作中运用最多的场景是:打开一个数据源,取出相关数据,根据不同的需求加工
整理后输出.针对上面的场景,我们来进行相关的设计,至于里面用到了哪种或哪些设计模式
大家有兴趣可以自行研究. 这里并非卖关子,只是想抛砖引玉,让大家保持好奇心,去深入了
解设计模式.&lt;/p&gt;

&lt;p&gt;如果强行说要去弄类的各种属性,也只不过是把数据源中的各个标题字段搞一遍而已,貌似是
画蛇添足, 所以我一般不搞,直接就是上类的方法.&lt;/p&gt;

&lt;h2 id=&#34;datesource:3482b2326563ae3120c25165b1c2f20a&#34;&gt;DateSource&lt;/h2&gt;

&lt;p&gt;数据源的类型包括文本文件、excel文件、各种数据库(Access,Oracle,SqlServer&amp;hellip;)&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;需要一个Open的方法来打开数据源,假定数据源是excel文件,OpenWorkBook()&lt;/li&gt;
&lt;li&gt;数据源有时不只一个excel文件而是一批,需要一个数组存放数据源的名称,FileArray()&lt;/li&gt;
&lt;li&gt;数据源需要一个存放路径,所以定义一个方法叫FolderPath()&lt;/li&gt;
&lt;li&gt;打开数据源取完数后,我们要关闭数据源,CloseWorkbook()&lt;/li&gt;
&lt;li&gt;通常还会定义一个方法用来释放程序过程中用到的对象FreeObj()&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;interface:3482b2326563ae3120c25165b1c2f20a&#34;&gt;Interface&lt;/h2&gt;

&lt;p&gt;根据以上的描述一个通用接口类的方法,基本上就都出来了,汇总如下:&lt;/p&gt;

&lt;h3 id=&#34;inormal:3482b2326563ae3120c25165b1c2f20a&#34;&gt;INormal&lt;/h3&gt;

&lt;p&gt;接口类的名称为:INormal&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Public Function OpenWorkbook()
End Function

Public Function FileArray()
End Function

Public Function CloseWorkbook()
End Function

Public Function FreeObj()
End Function
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上有几点需要注意一下:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;接口类的名称遵循惯例以I打头&lt;/li&gt;
&lt;li&gt;接口中涉及的方法名称不要有下划线&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;据我的经验,如果接口方法名称中带下划线的话,在实现类中VBE不容易自动生成相关的实现方法名称
（这一点纯属个人经验,未经官方证实）.&lt;/p&gt;

&lt;h3 id=&#34;ichange:3482b2326563ae3120c25165b1c2f20a&#34;&gt;IChange&lt;/h3&gt;

&lt;p&gt;INormal是打底的,还会需要另一个接口类,
这个接口类名称为IChange,具体包含以下方法:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;打开数据源后,要取得相关的源数据,需要一个方法GetSource()&lt;/li&gt;
&lt;li&gt;这些源数据取得后,要进行加工整理,定义一个方法TransSource()&lt;/li&gt;
&lt;li&gt;加工整理完以后,要进行输出,所以定义一个方法FillSource()&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;整理如下:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Public Function GetSource()
End Function

Public Function TransSource(Optional arr As Variant)
End Function

Public Function FillSource(Optional arr As Variant)
End Function
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;至此两个接口类已设置完成&lt;/p&gt;

&lt;h2 id=&#34;object:3482b2326563ae3120c25165b1c2f20a&#34;&gt;Object&lt;/h2&gt;

&lt;p&gt;现在来看实现类&lt;/p&gt;

&lt;h3 id=&#34;company:3482b2326563ae3120c25165b1c2f20a&#34;&gt;Company&lt;/h3&gt;

&lt;p&gt;先建一个实现类,名称为Company,引用上面的两个接口&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Implements INormal
Implements IChange
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首先实现接口类INormal的方法:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Private Function INormal_OpenWorkbook()
End Function

Private Function INormal_FolderPath()
End Function

Private Function INormal_FileArray()
End Function

Private Function INormal_CloseWorkbook()
End Function

Private Function INormal_FreeObj()
End Function
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再实现IChange接口类的方法&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Private Function IChange_GetSource() As Variant
    dim arr:dim brr()
    INormal_FolderPath
    arr = INormal_FileArray
    If IsArray(arr) Then
        For i = 0 To UBound(arr)
            INormal_OpenWorkbook arr(i)
            ...
            INormal_CloseWorkbook
        Next
        Erase arr
    End If
    IChange_GetSource = brr
End Function

Private Function IChange_TransSource( Optional arr As Variant )

Private Function IChange_FillSource(Optional arr As Variant)
End Function
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;更经常的我会把类的构造函数与析构函数利用起来&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Private Sub Class_Initialize()
    ...
End Sub

Private Sub Class_Terminate()
    INormal_FreeObj
    ...
End Sub
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当然上面这些实现类的中所涉及的具体方法,都需要根据具体情况自行编程,上面都只是一个框架.&lt;/p&gt;

&lt;p&gt;这个Company类是针对一个需求搞出来的.&lt;/p&gt;

&lt;h3 id=&#34;salary:3482b2326563ae3120c25165b1c2f20a&#34;&gt;Salary&lt;/h3&gt;

&lt;p&gt;现在我们再根据另外一个需求再新增一个实现类Salary&lt;/p&gt;

&lt;p&gt;数据源跟前面的类一样,但加工过程、输出要求等不一样&lt;/p&gt;

&lt;p&gt;Salary类的相关方法与Company类似,当然具体实现细节是不一样的,但都是继承前面的两个接口,方法名称都一样.&lt;/p&gt;

&lt;p&gt;至此我们搭积木盖房子所需要的积木基本上就搞出来了,人家说巧妇难为无米之炊,这米得先备着.&lt;/p&gt;

&lt;p&gt;开始煮菜:热锅、放油&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;organization-code:3482b2326563ae3120c25165b1c2f20a&#34;&gt;Organization code&lt;/h2&gt;

&lt;p&gt;新建一模块（不是类模块）,命名为:Pro&lt;/p&gt;

&lt;p&gt;声明一接口类的对象类: Public clsIChange As IChange&lt;/p&gt;

&lt;h3 id=&#34;getclass:3482b2326563ae3120c25165b1c2f20a&#34;&gt;getClass&lt;/h3&gt;

&lt;p&gt;首先我们要知道程序需要哪个实现类,所以我们在该模块中定义一个函数getClass,
通常我们需要一个标志来区分,这边我以当前工作表的名称来区分所用的实现类
（现实工作中经常这样,在一个工作簿中,给需求方发不同的表）.
具体如下:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Function getClass() As Variant
    Select Case ActiveSheet.Name
        Case &amp;quot;Comp&amp;quot;
            Set clsIChange = New Company
        Case &amp;quot;Sala&amp;quot;
            Set clsIChange = New Salary
    End Select
End Function
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上是可扩展的,如果还有其他表及对应的其他实现类,只需要增加Case即可.&lt;/p&gt;

&lt;h3 id=&#34;getclasslist:3482b2326563ae3120c25165b1c2f20a&#34;&gt;getClassList&lt;/h3&gt;

&lt;p&gt;接着定义一个函数进行类数据的取数加工输出:
    Function getClassList() As Variant
        Dim arr, brr
        With clsIChange
            arr = .GetSource
            brr = .TransSource(arr)
            .FillSource brr
        End With
        If IsArray(arr) Then Erase arr
        If IsArray(brr) Then Erase brr
    End Function&lt;/p&gt;

&lt;p&gt;以上我是为了调试哪个步骤出错多分了几步,调试正常或稳定的函数可以更简短如下:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Function getClassList() As Variant
    With clsIChange
        .FillSource .TransSource(.GetSource)
    End With
End Function
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;但个人不赞成这么做,因为需求不停在变,说不定哪天你又要开始调试了.
当然我应该倡导有问题要输出详细的文档来处理,但单步调试通常对于我
们来说是比较能掌握的实用方法.&lt;/p&gt;

&lt;p&gt;基本上菜做完了,要出锅了&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;result:3482b2326563ae3120c25165b1c2f20a&#34;&gt;Result&lt;/h2&gt;

&lt;p&gt;我们定义一个main过程&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Sub main()
    getClass
    getClassList
End Sub
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最后用一个控件关联main即可,这个控件可以用加载宏搞到菜单栏中,
这样在不同的工作表中点击它就可以取得不同数据结果了.&lt;/p&gt;

&lt;p&gt;PS:我通常不是要关联控件的过程,都写为函数以Function打头,
而不管它到底是否需要返回值,这是因为以前有过经历,
当要关联控件宏时,如果都是Sub,会出来一堆的列表,不容易选.&lt;/p&gt;

&lt;p&gt;至此已经是讲完了,可能主要玩Excel VBA的朋友还没体会出它的好用之处,简单提示几点:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;编程最烦的是什么?需求的变更!一个笑话是要折磨一个程序员最好的方法是:
不断的变更需求.&lt;/li&gt;
&lt;li&gt;需求变更后,我们需要调整代码,但调整的代码是否会影响其他未调整的部分?
是否会引进新的bug?这些我们都不敢保证.但以上基于设计模式的框架在很大
程度上避免了这些问题,比如现在Comp表的数据加工需求变了,这时我们只要调
整Company类的TransSource方法即可,而不用担心它会影响到其他.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Creating your own Symfony2 Bundle</title>
      <link>http://zhash.github.io/post/creating-your-own-symfony2-bundle</link>
      <pubDate>Tue, 24 May 2011 00:00:00 +0000</pubDate>
      
      <guid>http://zhash.github.io/post/creating-your-own-symfony2-bundle</guid>
      <description>


&lt;figure &gt;
    
        &lt;img src=&#34;http://zhash.github.io/media/symfony_ss.png&#34; alt=&#34;symfony&#34; /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;&lt;a href=&#34;http://symfony.com/&#34;&gt;Symfony2&lt;/a&gt; is a great web framework.
&lt;a href=&#34;https://opensky.com&#34;&gt;OpenSky&lt;/a&gt; is built on this framework and we are one
of the largest contributors to it. The primary building block for
Symfony2 is a bundle. Through it’s bundle system Symfony 2.0 achieves a
level of modularity I haven’t seen in other web frameworks. A bundle
permits a developer to add functionality to the framework and is the
best way to develop applications with Symfony2. In this post I’ll show
you how to create your own bundle.&lt;/p&gt;

&lt;h2 id=&#34;start-off-with-the-sandbox:b9c1d96372428c1d26afde598b5f3203&#34;&gt;Start off with the sandbox&lt;/h2&gt;

&lt;p&gt;First install symfony sandbox…&lt;/p&gt;

&lt;p&gt;the console can create a basic bundle for you.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; app/console init:bundle Spf13/SteveBundle

Initializing bundle &amp;quot;SteveBundle&amp;quot; in &amp;quot;Sites/sandbox/src/Spf13&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;tell-symfony2-about-it:b9c1d96372428c1d26afde598b5f3203&#34;&gt;Tell Symfony2 about it&lt;/h2&gt;

&lt;p&gt;Just having the bundle in place isn’t enough, you need to tell Symfony2
it exists (and where).&lt;/p&gt;

&lt;p&gt;In your &lt;strong&gt;app/AppKernel.php&lt;/strong&gt; inside the \$bundles array in
the&lt;strong&gt;&lt;em&gt;registerBundle function&lt;/em&gt;&lt;/strong&gt; add the following line&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    new Spf13\SteveBundle\SteveBundle(),
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;routing:b9c1d96372428c1d26afde598b5f3203&#34;&gt;Routing&lt;/h2&gt;

&lt;p&gt;You also need to define a route and tell Symfony2 where to find the
routing file. Of the 4 different formats available, I prefer yaml which
is the default in Symfony2.&lt;/p&gt;

&lt;p&gt;in &lt;strong&gt;app/config/routing.yml&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;steve:
    resource: @SteveBundle/Resources/config/routing.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now create that &lt;strong&gt;routing.yml&lt;/strong&gt; file with the following contents.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; steve:
     pattern:  /steve
          defaults: { _controller: SteveBundle:Default:index }
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;the-controller:b9c1d96372428c1d26afde598b5f3203&#34;&gt;The Controller&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;The init command has created a controller for you called DefaultController with a basic action (index) which renders a basic php template file.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now visit the page in a browser to confirm everything worked.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://localhost/[webroot]/app_dev.php/steve&#34;&gt;http://localhost/[webroot]/app_dev.php/steve&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;and be greeted by your new bundle.&lt;/p&gt;

&lt;h3 id=&#34;related-posts:b9c1d96372428c1d26afde598b5f3203&#34;&gt;Related Posts&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://spf13.com/post/getting-started-with-symfony2/&#34;&gt;Getting Started with
Symfony2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://spf13.com/post/symfony2/&#34;&gt;On Symfony2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://spf13.com/post/creating-a-symfony2-console-command/&#34;&gt;Creating a Symfony2 Console
Command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://spf13.com/post/next-gen-php-frameworks/&#34;&gt;Next Gen PHP
Frameworks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>A new page for Google</title>
      <link>http://zhash.github.io/post/a-new-page-for-google</link>
      <pubDate>Fri, 21 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>http://zhash.github.io/post/a-new-page-for-google</guid>
      <description>
&lt;figure class=&#34;right half&#34;&gt;
    
        &lt;img src=&#34;http://zhash.github.io/media/sergey-brin-and-larry-page.jpg&#34; alt=&#34;Google Management&#34; /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;With a single tweet Google CEO Eric Schmidt announce a shift at the top
of the search giant. The timing of this announcement can’t help but call
to question if someone more youthful is needed at the helm to hold off
the tidal waves of Apple, Microsoft and Facebook.&lt;/p&gt;

&lt;p&gt;Odd that Google chose twitter and a blog post to convey this instead of
more traditional methods.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“Day-to-day adult supervision no longer needed!” Schmidt wrote on his
Twitter account moments after Google dropped the bombshell that
upstaged its fourth-quarter earnings. Schmidt, 55, will still be
available to advise Page, 37, and Google’s other 37-year-old founder,
Sergey Brin, as the company’s executive chairman. &lt;em&gt;via
&lt;a href=&#34;http://www.msnbc.msn.com/id/41179589/ns/business-us_business/&#34;&gt;msnbc&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Schmidt is referencing an interview with Charlie Rose on PBS from when
he first took the helm where Page and Brin explain why he took the role
as CEO.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“Parental supervision, to be honest,” says Brin.&lt;/p&gt;

&lt;p&gt;Rose laughs hard, and asks Page, “Do you agree with that – you guys
need adult supervision?”&lt;/p&gt;

&lt;p&gt;Page: “I don’t know if I’d say need, but it’s really nice to have.”&lt;/p&gt;

&lt;p&gt;Rose: “It’s beneficial.”&lt;/p&gt;

&lt;p&gt;Page: “Yeah.”&lt;/p&gt;

&lt;p&gt;&lt;em&gt;via
&lt;a href=&#34;http://blogs.wsj.com/venturecapital/2011/01/20/about-eric-schmidts-adult-supervision-comment/&#34;&gt;WSJ&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Eric Schmidt steps down just as  Mark Zuckerberg was named &lt;a href=&#34;http://www.blackweb20.com/2010/12/15/mark-zuckerberg-named-person-of-the-year-by-time/&#34;&gt;Person of
the Year by
Time&lt;/a&gt;and
Jobs was named &lt;a href=&#34;http://www.blackweb20.com/2010/12/24/steve-jobs-person-of-the-year-according-to-financial-times/&#34;&gt;Person of the Year by Financial
Times&lt;/a&gt;.
It calls to question if a more dynamic youthful leader was needed and if
Page can step up and be that.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;via&lt;a href=&#34;http://googleblog.blogspot.com/2011/01/update-from-chairman.html&#34;&gt;Google
Blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Update:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;On the New Yorker Ken Auletta sheds some light on &lt;a href=&#34;http://www.newyorker.com/online/blogs/newsdesk/2011/01/eric-schmidt-google.html&#34;&gt;why Eric Schmidt is
stepping down as Google’s
CEO&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Schmidt, according to associates, lost some energy and focus after
losing the China decision. At the same time, Google was becoming
defensive. All of their social-network efforts had faltered. Facebook
had replaced them as the hot tech company, the place vital engineers
wanted to work. Complaints about Google bureaucracy intensified.
Governments around the world were lobbing grenades at Google over
privacy, copyright, and size issues. The “don’t be evil” brand was
getting tarnished, and the founders were restive. Schmidt started to
think of departing. Nudged by a board-member friend and an outside
advisor that he had to re-energize himself, he decided after Labor Day
that he could reboot.&lt;/p&gt;

&lt;p&gt;He couldn’t. By the end of the year, he was ready to jump on his own.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Apparently Facebook and youth had quite a bit to do with it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Backing up MySQL</title>
      <link>http://zhash.github.io/post/backing-up-mysql</link>
      <pubDate>Fri, 12 Dec 2008 00:00:00 +0000</pubDate>
      
      <guid>http://zhash.github.io/post/backing-up-mysql</guid>
      <description>


&lt;figure class=&#34;third right hid&#34;&gt;
    
        &lt;img src=&#34;http://zhash.github.io/media/MySQL.png&#34; alt=&#34;Image via Wikipedia&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;p&gt;
        Image via Wikipedia
        
            
        
        &lt;/p&gt; 
    &lt;/figcaption&gt;
    
&lt;/figure&gt;



&lt;p&gt;I don’t know very many people that haven’t been devastated by the loss
of data… Yet I am baffled that millions of professional IT workers still
ignore backing up their data. Since computers are great at doing
repetitive things
like &lt;a href=&#34;http://en.wikipedia.org/wiki/Backup&#34; title=&#34;Backup&#34;&gt;backups&lt;/a&gt;.. why not
spend 20 minutes setting up your machine to backup your files for you.
This guide will be specific to &lt;a href=&#34;http://www.mysql.com&#34; title=&#34;MySQL&#34;&gt;mysql&lt;/a&gt; to
create a local copy of the backup. Then read my other guide about
copying files securely to a remote backup server for the 2nd part.&lt;/p&gt;

&lt;p&gt;Hopefully you are using *nix. If so then you have some great utilities
already available to you.&lt;a href=&#34;http://rsync.samba.org/&#34; title=&#34;Rsync&#34;&gt;Rsync&lt;/a&gt;,
SSH, &lt;a href=&#34;http://en.wikipedia.org/wiki/Tar_%28band%29 &amp;quot;Tar (band&#34;&gt;Tar&lt;/a&gt;&amp;rdquo;),
Bash and Cron can produce elegant solutions.&lt;/p&gt;

&lt;h1 id=&#34;the-setup:6ca2d0ac2fb3a680d3e70a777f764e21&#34;&gt;The Setup&lt;/h1&gt;

&lt;h2 id=&#34;create-backup-user:6ca2d0ac2fb3a680d3e70a777f764e21&#34;&gt;Create Backup User&lt;/h2&gt;

&lt;p&gt;First thing to do is to create a &lt;strong&gt;Read Only&lt;/strong&gt; mysql user to perform the
backups. Optionally a second recovery user can also be created. It isn’t
advisable to perform backups as the root user as common sense and proper
procedures dictate that a user should always have the minimum privilages
necessary to accomplish the job.&lt;/p&gt;

&lt;p&gt;Example: Run the following command at the mysql prompt when logged in as
root to grant the minimal privilages needed.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;GRANT LOCK TABLES, SELECT, FILE, RELOAD, SUPER ON *.* TO &#39;db-backup&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;really-long.and Varied p@$$wrd&#39;;&lt;/code&gt;{.code}&lt;/p&gt;

&lt;h2 id=&#34;install-your-backup-script:6ca2d0ac2fb3a680d3e70a777f764e21&#34;&gt;Install Your Backup Script&lt;/h2&gt;

&lt;p&gt;There is a fantastic mysql backup script that is really easy to use and
simply wraps the mysql backup utilities with nice features like daily,
weekly, and monthly backups. Cycling and optionally emailing a summary
of the backup.&lt;/p&gt;

&lt;h3 id=&#34;download:6ca2d0ac2fb3a680d3e70a777f764e21&#34;&gt;Download&lt;/h3&gt;

&lt;p&gt;Go here to
download &lt;a href=&#34;http://sourceforge.net/projects/automysqlbackup/&#34;&gt;automysqlbackup&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;install:6ca2d0ac2fb3a680d3e70a777f764e21&#34;&gt;Install&lt;/h3&gt;

&lt;p&gt;Install it by copying it to a good location. I use /usr/local/sbin/ or
/usr/local/bin depending on if I am an admin on the system, or just a
user on a shared host.&lt;/p&gt;

&lt;p&gt;make sure to set the permissions as executable.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;# chmod +x automysqlbackup&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;configure:6ca2d0ac2fb3a680d3e70a777f764e21&#34;&gt;Configure&lt;/h3&gt;

&lt;p&gt;Simply edit the shell script with your favorite editor. If you don’t
have one, permit me to recommend VIM&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# vim /usr/local/sbin/automysqlbackup.sh

#===================================================================== 
# Set the following variables to your system needs 
# (Detailed instructions below variables) 
#=====================================================================
# Username to access the MySQL server e.g. dbuser 
USERNAME=db-backup
# Username to access the MySQL server e.g. 
password PASSWORD=that-secure password set earlier
# Host name (or IP address) of MySQL server e.g localhost 
DBHOST=localhost
# List of DBNAMES for Daily/Weekly Backup e.g. &amp;quot;DB1 DB2 DB3&amp;quot; 
DBNAMES=&amp;quot;all&amp;quot; 
# OR NAME THEM WITH SPACES SEPARATING
# Backup directory location e.g /backups 
BACKUPDIR=&amp;quot;/usr/local/backup/mysql&amp;quot; 
# I LIKE THIS DIRECTORY, JUST MAKE SURE PERMISSIONS ARE SET PROPERLY
# Mail setup 
# What would you like to be mailed to you? 
# - log : send only log file 
# - files : send log file and sql files as attachments (see docs) 
# - stdout : will simply output the log to the screen if run manually. 
# - quiet : Only send logs if an error occurs to the MAILADDR. 
MAILCONTENT=&amp;quot;stdout&amp;quot;
# Set the maximum allowed email size in k. (4000 = approx 5MB email [see docs]) 
MAXATTSIZE=&amp;quot;4000&amp;quot;
# Email Address to send mail to? (
MAILADDR=&amp;quot;email@address.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;setup-cron-to-run-nightly:6ca2d0ac2fb3a680d3e70a777f764e21&#34;&gt;Setup Cron to run nightly&lt;/h2&gt;

&lt;p&gt;create a new file in /etc/cron.daily/ and place these contents into it..&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# vim /etc/cron.daily/mysql-backup
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;#!/bin/bash /usr/local/bin/automysqlbackup 2&amp;gt;&amp;amp;1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Make sure it is executable.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# chmod +x /etc/cron.daily/mysql-backup
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I usually test it simply run that cron file from the command line.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# /etc/cron.daily/mysql-backup
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;conclusion:6ca2d0ac2fb3a680d3e70a777f764e21&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Remember that a backup is only as good as it&amp;rsquo;s restore. What we have done here should be considered
the bare minimum and will result in some data loss if it&amp;rsquo;s needed.. How much data loss?
Up to one days worth of changes as that&amp;rsquo;s how frequently we are backing up things.
If we wanted to shrink that window then run the script more often, but recognize that cost for this
is the data retained will grow in size.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>